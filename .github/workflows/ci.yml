name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Run linting
        run: yarn lint

  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Windows build environment
        if: runner.os == 'Windows'
        run: |
          echo "Setting up Windows build environment"
          Add-Content -Path "$env:USERPROFILE\.npmrc" -Value "msvs_version=2022"
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: List build artifacts (for debugging)
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            dir -r lib
            dir -r build
          else
            find lib -type f | sort
            find build -type f | sort
          fi
      - name: Run tests with coverage
        run: yarn test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node-darts-${{ matrix.os }}
          path: |
            dist
            lib

  prebuild:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Package prebuilds
        run: yarn node-pre-gyp package
      - name: Upload prebuild artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node-darts-prebuild-${{ matrix.os }}-node${{ matrix.node-version }}
          path: prebuilds
      - name: Publish prebuilds
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: yarn node-pre-gyp publish
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
